{
  "version": 3,
  "sources": ["../../../wasm-chess/pkg/wasm_chess.js", "../../src/wasm-bindings.ts", "../../src/helpers.ts", "../../src/worker/worker-types.ts", "../../src/worker/worker-wrapper.ts", "../../src/wasm-bindings.test.ts", "../../src/helpers.test.ts", "../../src/entry.test.ts"],
  "sourcesContent": ["let wasm_bindgen;\n(function() {\n    const __exports = {};\n    let script_src;\n    if (typeof document !== 'undefined' && document.currentScript !== null) {\n        script_src = new URL(document.currentScript.src, location.href).toString();\n    }\n    let wasm = undefined;\n\n    const cachedTextDecoder = (typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-8', { ignoreBOM: true, fatal: true }) : { decode: () => { throw Error('TextDecoder not available') } } );\n\n    if (typeof TextDecoder !== 'undefined') { cachedTextDecoder.decode(); };\n\n    let cachedUint8Memory0 = null;\n\n    function getUint8Memory0() {\n        if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n            cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n        }\n        return cachedUint8Memory0;\n    }\n\n    function getStringFromWasm0(ptr, len) {\n        ptr = ptr >>> 0;\n        return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n    }\n\n    const heap = new Array(128).fill(undefined);\n\n    heap.push(undefined, null, true, false);\n\n    let heap_next = heap.length;\n\n    function addHeapObject(obj) {\n        if (heap_next === heap.length) heap.push(heap.length + 1);\n        const idx = heap_next;\n        heap_next = heap[idx];\n\n        heap[idx] = obj;\n        return idx;\n    }\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 132) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst cachedTextEncoder = (typeof TextEncoder !== 'undefined' ? new TextEncoder('utf-8') : { encode: () => { throw Error('TextEncoder not available') } } );\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachedInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {\n        cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        wasm.__wbindgen_exn_store(addHeapObject(e));\n    }\n}\n/**\n*/\nclass CounterForJs {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(CounterForJs.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_counterforjs_free(ptr);\n    }\n    /**\n    * @returns {CounterForJs}\n    */\n    static new() {\n        const ret = wasm.counterforjs_new();\n        return CounterForJs.__wrap(ret);\n    }\n    /**\n    */\n    think() {\n        wasm.counterforjs_think(this.__wbg_ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    count() {\n        const ret = wasm.counterforjs_count(this.__wbg_ptr);\n        return ret;\n    }\n}\n__exports.CounterForJs = CounterForJs;\n/**\n*/\nclass PerftForJs {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(PerftForJs.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_perftforjs_free(ptr);\n    }\n    /**\n    * @returns {PerftForJs}\n    */\n    static new() {\n        const ret = wasm.perftforjs_new();\n        return PerftForJs.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    count() {\n        const ret = wasm.perftforjs_count(this.__wbg_ptr);\n        return ret;\n    }\n    /**\n    * @param {string} fen\n    * @param {number} max_depth\n    */\n    setup(fen, max_depth) {\n        const ptr0 = passStringToWasm0(fen, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.perftforjs_setup(this.__wbg_ptr, ptr0, len0, max_depth);\n    }\n    /**\n    * @returns {boolean}\n    */\n    think_and_return_done() {\n        const ret = wasm.perftforjs_think_and_return_done(this.__wbg_ptr);\n        return ret !== 0;\n    }\n    /**\n    */\n    clear() {\n        wasm.perftforjs_clear(this.__wbg_ptr);\n    }\n}\n__exports.PerftForJs = PerftForJs;\n/**\n*/\nclass UciForJs {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(UciForJs.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_uciforjs_free(ptr);\n    }\n    /**\n    * @returns {UciForJs}\n    */\n    static new() {\n        const ret = wasm.uciforjs_new();\n        return UciForJs.__wrap(ret);\n    }\n    /**\n    * @param {string} line\n    * @returns {string}\n    */\n    handle_line(line) {\n        let deferred3_0;\n        let deferred3_1;\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(line, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.uciforjs_handle_line(retptr, this.__wbg_ptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            var r3 = getInt32Memory0()[retptr / 4 + 3];\n            var ptr2 = r0;\n            var len2 = r1;\n            if (r3) {\n                ptr2 = 0; len2 = 0;\n                throw takeObject(r2);\n            }\n            deferred3_0 = ptr2;\n            deferred3_1 = len2;\n            return getStringFromWasm0(ptr2, len2);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(deferred3_0, deferred3_1, 1);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    think() {\n        let deferred2_0;\n        let deferred2_1;\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.uciforjs_think(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            var r3 = getInt32Memory0()[retptr / 4 + 3];\n            var ptr1 = r0;\n            var len1 = r1;\n            if (r3) {\n                ptr1 = 0; len1 = 0;\n                throw takeObject(r2);\n            }\n            deferred2_0 = ptr1;\n            deferred2_1 = len1;\n            return getStringFromWasm0(ptr1, len1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n        }\n    }\n}\n__exports.UciForJs = UciForJs;\n\nasync function __wbg_load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction __wbg_get_imports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbg_logtojs_1cd69cf7d1e69686 = function(arg0, arg1) {\n        globalThis.BindingsJs.log_to_js(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n        const ret = getStringFromWasm0(arg0, arg1);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_abda76e883ba8a5f = function() {\n        const ret = new Error();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_stack_658279fe44541cf6 = function(arg0, arg1) {\n        const ret = getObject(arg1).stack;\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbg_error_f851667af71bcfc6 = function(arg0, arg1) {\n        let deferred0_0;\n        let deferred0_1;\n        try {\n            deferred0_0 = arg0;\n            deferred0_1 = arg1;\n            console.error(getStringFromWasm0(arg0, arg1));\n        } finally {\n            wasm.__wbindgen_free(deferred0_0, deferred0_1, 1);\n        }\n    };\n    imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n        takeObject(arg0);\n    };\n    imports.wbg.__wbg_crypto_c48a774b022d20ac = function(arg0) {\n        const ret = getObject(arg0).crypto;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_is_object = function(arg0) {\n        const val = getObject(arg0);\n        const ret = typeof(val) === 'object' && val !== null;\n        return ret;\n    };\n    imports.wbg.__wbg_process_298734cf255a885d = function(arg0) {\n        const ret = getObject(arg0).process;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_versions_e2e78e134e3e5d01 = function(arg0) {\n        const ret = getObject(arg0).versions;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_node_1cd7a5d853dbea79 = function(arg0) {\n        const ret = getObject(arg0).node;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_is_string = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'string';\n        return ret;\n    };\n    imports.wbg.__wbg_msCrypto_bcb970640f50a1e8 = function(arg0) {\n        const ret = getObject(arg0).msCrypto;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_require_8f08ceecec0f4fee = function() { return handleError(function () {\n        const ret = module.require;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbindgen_is_function = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'function';\n        return ret;\n    };\n    imports.wbg.__wbg_getRandomValues_37fa2ca9e4e07fab = function() { return handleError(function (arg0, arg1) {\n        getObject(arg0).getRandomValues(getObject(arg1));\n    }, arguments) };\n    imports.wbg.__wbg_randomFillSync_dc1e9a60c158336d = function() { return handleError(function (arg0, arg1) {\n        getObject(arg0).randomFillSync(takeObject(arg1));\n    }, arguments) };\n    imports.wbg.__wbg_newnoargs_581967eacc0e2604 = function(arg0, arg1) {\n        const ret = new Function(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_call_cb65541d95d71282 = function() { return handleError(function (arg0, arg1) {\n        const ret = getObject(arg0).call(getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbindgen_object_clone_ref = function(arg0) {\n        const ret = getObject(arg0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_self_1ff1d729e9aae938 = function() { return handleError(function () {\n        const ret = self.self;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_window_5f4faef6c12b79ec = function() { return handleError(function () {\n        const ret = window.window;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_globalThis_1d39714405582d3c = function() { return handleError(function () {\n        const ret = globalThis.globalThis;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_global_651f05c6a0944d1c = function() { return handleError(function () {\n        const ret = global.global;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbindgen_is_undefined = function(arg0) {\n        const ret = getObject(arg0) === undefined;\n        return ret;\n    };\n    imports.wbg.__wbg_call_01734de55d61e11d = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = getObject(arg0).call(getObject(arg1), getObject(arg2));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_getTime_5e2054f832d82ec9 = function(arg0) {\n        const ret = getObject(arg0).getTime();\n        return ret;\n    };\n    imports.wbg.__wbg_new0_c0be7df4b6bd481f = function() {\n        const ret = new Date();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_buffer_085ec1f694018c4f = function(arg0) {\n        const ret = getObject(arg0).buffer;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_6da8e527659b86aa = function(arg0, arg1, arg2) {\n        const ret = new Uint8Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_8125e318e6245eed = function(arg0) {\n        const ret = new Uint8Array(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_set_5cf90238115182c3 = function(arg0, arg1, arg2) {\n        getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n    };\n    imports.wbg.__wbg_newwithlength_e5d69174d6984cd7 = function(arg0) {\n        const ret = new Uint8Array(arg0 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_subarray_13db269f57aa838d = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).subarray(arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_memory = function() {\n        const ret = wasm.memory;\n        return addHeapObject(ret);\n    };\n\n    return imports;\n}\n\nfunction __wbg_init_memory(imports, maybe_memory) {\n\n}\n\nfunction __wbg_finalize_init(instance, module) {\n    wasm = instance.exports;\n    __wbg_init.__wbindgen_wasm_module = module;\n    cachedInt32Memory0 = null;\n    cachedUint8Memory0 = null;\n\n\n    return wasm;\n}\n\nfunction initSync(module) {\n    if (wasm !== undefined) return wasm;\n\n    const imports = __wbg_get_imports();\n\n    __wbg_init_memory(imports);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nasync function __wbg_init(input) {\n    if (wasm !== undefined) return wasm;\n\n    if (typeof input === 'undefined' && script_src !== 'undefined') {\n        input = script_src.replace(/\\.js$/, '_bg.wasm');\n    }\n    const imports = __wbg_get_imports();\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n    __wbg_init_memory(imports);\n\n    const { instance, module } = await __wbg_load(await input, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nwasm_bindgen = Object.assign(__wbg_init, { initSync }, __exports);\n\n})();\n", "\ninterface IBindingsJs {\n    log_to_js(message: string): void\n}\n\ndeclare global {\n    var BindingsJs: IBindingsJs\n}\n\nexport type WasmListener = (line: string) => void\n\nlet listeners: WasmListener[] = []\n\nexport function listenScope(listener: WasmListener, callback: () => void): void {\n    listeners.push(listener)\n    callback()\n    listeners = listeners.filter((l) => l !== listener)\n}\n\nexport function listen(listener: WasmListener): () => void {\n    listeners.push(listener)\n    return () => {\n        listeners = listeners.filter((l) => l !== listener)\n    }\n}\n\nglobalThis.BindingsJs = {\n    log_to_js: (message: string): void => {\n        // console.log('wasm-bindings.ts, syncWasmUci, log_to_js:', message)\n        message.split('\\n').forEach((line) => {\n            listeners.forEach((listener) => listener(line))\n        })\n    }\n}\n\n// This loads the .d.ts type definitions. However, because web worker support\n// for modules isn't very mature, the wasm bindings are instead imported via a\n// <script> tag which sets a global variable called `wasm_bindgen`.\nimport '../public/lib/wasm-pack/wasm_chess'\nimport { resolveable } from './helpers'\nimport { createWorker } from './worker/worker-wrapper'\n\n\nexport function jsWorkerForTesting() {\n    const worker = new Worker('build/worker/js-worker-for-testing.js')\n\n    return {\n        echo: (message: string) => {\n            const result = new Promise<string>((resolve) => {\n                worker.onmessage = (e) => {\n                    resolve(e.data)\n                    worker.onmessage = null\n                }\n            })\n            worker.postMessage(message)\n            return result\n        },\n        terminate: () => {\n            worker.terminate()\n        }\n    }\n}\n\n\nexport async function wasmWorkerForTesting() {\n    let worker = await createWorker('build/worker/wasm-worker-for-testing.js')\n\n    return {\n        counter: {\n            go: function () {\n                worker.send({ name: 'counter-go' })\n            },\n\n            stop: async function (): Promise<number> {\n                let response = await worker.sendWithResponse({ name: 'counter-count' })\n                return response.counterResult\n            },\n        },\n\n        perft: {\n            start: function (fen: string, depth: number) {\n                worker.send({ name: 'perft-setup', fen, depth })\n            },\n\n            stop: async function (): Promise<number> {\n                let response = await worker.sendWithResponse({ name: 'perft-count' })\n                return response.perftResult\n            }\n        },\n\n        terminate: () => worker.terminate\n    }\n}\n\nexport async function newUciWasmWorker() {\n    let worker = await createWorker('build/worker/uci-wasm-worker.js')\n\n    return {\n        handle_line: async function (line: string): Promise<string> {\n            let response = await worker.sendWithResponse({\n                name: 'uci',\n                line\n            })\n            return response.output\n        },\n        terminate: () => worker.terminate\n    }\n}\n\nlet _workerUci: ReturnType<typeof newUciWasmWorker> | undefined = undefined\nasync function singletonUciWorker(): ReturnType<typeof newUciWasmWorker> {\n    if (!_workerUci) {\n        _workerUci = newUciWasmWorker()\n        _workerUci = Promise.resolve(await _workerUci)\n    }\n\n    return await Promise.resolve(_workerUci)\n}\n\nlet _searchResults: Map<string, Promise<string>> = new Map()\n\nexport async function searchWorker(): Promise<{\n    search: (start: string, moves: string[]) => Promise<string>,\n    terminate: () => void\n}> {\n    let worker = await singletonUciWorker()\n\n    return {\n        search: async (start: string, moves: string[]) => {\n            let key = `${start}-${moves.join('-')}`\n\n            let result = _searchResults.get(key)\n            if (result) {\n                return await result;\n            }\n\n            let [promise, resolve] = resolveable<string>()\n            _searchResults.set(key, promise)\n\n            // cancel what we're currently doing\n            await worker.handle_line('stop')\n\n            let output = []\n            if (start === 'startpos') {\n                output.push(await worker.handle_line(`position ${start} moves ${moves.join(' ')}`))\n            } else {\n                output.push(await worker.handle_line(`position fen ${start} moves ${moves.join(' ')}`))\n            }\n            output.push(await worker.handle_line('go'))\n            await new Promise(resolve => setTimeout(resolve, 1000))\n            output.push(await worker.handle_line('stop'))\n\n            let reversed = output\n                .flatMap(line => line.split('\\n'))\n                .map(line => line.trim())\n                .filter(line => line !== '')\n                .reverse()\n\n            for (let line of reversed) {\n                if (line.startsWith('bestmove')) {\n                    let result = line.split(' ')[1]\n                    resolve(result)\n                    return result\n                }\n            }\n\n            throw new Error('no bestmove found')\n        },\n        terminate: () => worker.terminate()\n    }\n}\n\n\nlet wasmLoaded = false\nexport async function loadWasmBindgen(): Promise<void> {\n    if (wasmLoaded) {\n        return\n    }\n\n    try {\n        wasm_bindgen\n    } catch (e) {\n        if (e instanceof ReferenceError) {\n            throw new Error('wasm_bindgen is undefined, please include via <script> tag')\n        }\n    }\n\n    await wasm_bindgen()\n    wasmLoaded = true\n}\n\nexport function syncWasmUci() {\n    let uci = wasm_bindgen.UciForJs.new()\n\n    function handleLineAndLog(line: string) {\n        let result = uci.handle_line(line)\n        // console.log('wasm-bindings.ts, syncWasmUci <=', line)\n        // console.log('wasm-bindings.ts, syncWasmUci =>', result)\n        return result\n    }\n\n    return {\n        currentFen: (): string => {\n            let fen = ''\n            let result = handleLineAndLog('d')\n\n            for (let line of result.split('\\n')) {\n                if (line.indexOf('Fen: ') >= 0) {\n                    fen = line.split('Fen: ')[1].trim()\n                }\n            }\n\n            // console.log('wasm-bindings.ts, syncWasmUci, currentFen() =>', result)\n            return fen\n        },\n        possibleMoves: (): string[] => {\n            let moves: string[] = []\n            let result = handleLineAndLog('go perft 1')\n\n            for (let line of result.split('\\n')) {\n                if (line.indexOf(':') === -1) {\n                    continue\n                }\n                let split = line.split(':').filter(v => v !== '').map(v => v.trim())\n                if (split.length !== 2) {\n                    continue\n                }\n                let [move, perft] = split\n                if (perft !== '1') {\n                    continue\n                }\n\n                if (move.length !== 4 && move.length !== 5) {\n                    continue\n                }\n                moves.push(move)\n            }\n            // console.log('wasm-bindings.ts, syncWasmUci, possibleMoves() =>', moves)\n            return moves\n        },\n        setPosition: (position: string, moves: string[]) => {\n            if (position === 'startpos') {\n                handleLineAndLog(`position ${position} moves ${moves.join(' ')}`)\n            } else {\n                handleLineAndLog(`position fen ${position} moves ${moves.join(' ')}`)\n            }\n        }\n    }\n}\n", "\nexport type Piece = 'R' | 'N' | 'B' | 'K' | 'Q' | 'P' | 'r' | 'n' | 'b' | 'k' | 'q' | 'p' | ' ';\nexport type Row = [Piece, Piece, Piece, Piece, Piece, Piece, Piece, Piece];\nexport type Board = [Row, Row, Row, Row, Row, Row, Row, Row];\n\nexport function rankStr(rank: number): string {\n    return (rank + 1).toString();\n}\n\nexport function fileStr(file: number): string {\n    return 'abcdefgh'[file];\n}\n\nexport function locationStr(file: number, rank: number): string {\n    return fileStr(file) + rankStr(rank);\n}\n\nexport function boardFromFen(fen: string): Board {\n    if (fen == 'startpos') {\n        fen = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - - 0 1';\n    }\n\n    if (fen.startsWith('fen ')) {\n        fen = fen.split('fen ')[1];\n    }\n\n    let board: Board = [\n        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],\n        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],\n        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],\n        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],\n        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],\n        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],\n        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],\n        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],\n    ];\n\n    fen.split(' ')[0].split('/').map((row, rank) => {\n        let file = 0;\n        row.split('').map(piece => {\n            let pieceAsInt = parseInt(piece);\n            if (isNaN(pieceAsInt)) {\n                board[rank][file] = piece as Piece;\n                file++\n            } else {\n                file += pieceAsInt;\n            }\n        })\n    });\n\n    return board\n}\n\nexport function boardString(board: Board): string {\n    return [...board].map(row => row.join('')).join('\\n');\n}\n\nexport function resolveable<T>(): [promise: Promise<T>, resolve: (t: T) => void] {\n    let resolve: (t: T) => void;\n    let promise = new Promise<T>((r) => {\n        resolve = r;\n    });\n    return [promise, resolve!];\n}\n\nexport function indent_string(lines: string, indent: number): string {\n    let s = ' '.repeat(indent);\n    return lines.split('\\n').map(line => s + line).join('\\n');\n}\n\nexport function prettyJson(json: any, indent?: number): string {\n    if (!indent) {\n        indent = 0;\n    }\n\n    // array\n    if (Array.isArray(json)) {\n        let result = \"\";\n        for (let value of json) {\n            result += \"\\n  \" + value;\n        }\n        return result;\n    }\n\n    let result = \"{\" + \"\\n\";\n\n    for (let key in json) {\n        let value = json[key];\n        if (typeof value == 'string') {\n            if (value.indexOf(\"\\n\") != -1) {\n                result += \"  \" + key + \": \" + \"\\n\";\n                result += indent_string(value, 4) + \"\\n\";\n            } else {\n                result += \"  \" + key + \": \" + value + \"\\n\";\n            }\n        } else {\n            result += \"  \" + key + \": \" + value + \"\\n\";\n        }\n    }\n\n    return result;\n}\n\nexport function omit<T, K extends keyof T>(obj: T, ...keys: K[]): Omit<T, K> {\n    let result: any = {};\n    for (let key in obj) {\n        if (!keys.includes(key as any)) {\n            result[key] = obj[key];\n        }\n    }\n    return result;\n}\n", "\nexport type SendToWorker = {\n    name: 'counter-go',\n} | {\n    name: 'perft-setup',\n    fen: string,\n    depth: number,\n} | SendToWorkerWithResponse;\n\nexport type SendToWorkerWithResponse = ({\n    name: 'counter-count',\n} | {\n    name: 'perft-count',\n} | {\n    name: 'uci',\n    line: string,\n} | {\n    name: 'uci-flush-output',\n}) & { id: number };\n\nexport function encodeSendToWorker(msg: SendToWorker): string {\n    return JSON.stringify(msg);\n}\n\nexport function decodeSendToWorker(msg: string): SendToWorker {\n    return JSON.parse(msg);\n}\n\nexport type ReceiveFromWorkerMessage = ({\n    name: 'ready',\n} | {\n    name: 'log',\n    msg: Array<any>,\n} | {\n    name: 'error',\n    msg: string,\n}) & {\n    kind: 'message',\n};\n\nexport type ReceiveFromWorker = ReceiveFromWorkerMessage | ReceiveFromWorkerResponse;\n\nexport type ReceiveFromWorkerResponse = ({\n    name: 'counter-count',\n    counterResult: number,\n} | {\n    name: 'perft-count',\n    perftResult: number,\n} | {\n    name: 'uci',\n    output: string,\n} | {\n    name: 'uci-flush-output',\n    output: string,\n}) & {\n    kind: 'response',\n    id: number,\n};\n\nexport function isEmpty(msg: ReceiveFromWorker): boolean {\n    if (msg.name === 'log') {\n        return msg.msg.length === 0;\n    } else if (msg.name === 'uci') {\n        return msg.output.length === 0;\n    } else if (msg.name === 'uci-flush-output') {\n        return msg.output.length === 0;\n    }\n    return false\n}\n\nexport function isResponse(msg: ReceiveFromWorker): msg is ReceiveFromWorkerResponse {\n    return msg.kind === 'response' && msg.id !== undefined;\n}\n\nexport function responseMatchesRequest<\n    S extends SendToWorkerWithResponse,\n    R extends ReceiveFromWorkerResponse & Pick<S, \"name\">\n>(msg: SendToWorkerWithResponse, response: ReceiveFromWorker): response is R {\n    return isResponse(response) && response.id === msg.id && response.name === msg.name;\n}\n\nexport function encodeReceiveFromWorker(msg: ReceiveFromWorker): string {\n    return JSON.stringify(msg);\n}\n\nexport function decodeReceiveFromWorker(msg: string): ReceiveFromWorker {\n    return JSON.parse(msg);\n}\n", "\nimport { indent_string, omit, prettyJson } from \"../helpers\"\nimport { SendToWorker, ReceiveFromWorkerResponse, ReceiveFromWorkerMessage, decodeReceiveFromWorker, ReceiveFromWorker, responseMatchesRequest, SendToWorkerWithResponse, isEmpty } from \"./worker-types\"\n\nexport async function createWorker(url: string) {\n    let worker = new Worker(url)\n\n    let listeners: Array<(e: ReceiveFromWorker) => void> = [\n        (e: ReceiveFromWorker) => {\n            if (isEmpty(e)) {\n                return\n            }\n\n            if (e.name === 'log') {\n                console.log('log (wasm worker) =>', prettyJson(e.msg))\n            } else if (e.name === 'error') {\n                console.error('error (wasm worker) =>', prettyJson(e.msg))\n            } else if (e.name === 'ready') {\n                console.log('ready (wasm worker)')\n            } else if (e.name === 'uci') {\n                if (e.output.length > 0) {\n                    console.log('uci sync response (wasm worker)', indent_string('\\n' + e.output, 2))\n                }\n            } else if (e.name === 'uci-flush-output') {\n                if (e.output.length > 0) {\n                    console.log('uci async response (wasm worker)', e.output)\n                }\n            } else {\n                console.log(e.kind, '(wasm worker) =>', prettyJson(omit(e, 'name', 'kind', 'id')))\n            }\n        },\n    ]\n\n    worker.onmessage = (e) => {\n        let data = decodeReceiveFromWorker(e.data)\n        listeners.forEach((l) => l(data))\n    }\n\n    async function waitFor<T>(f: (e: ReceiveFromWorker) => T | undefined): Promise<T> {\n        return new Promise((resolve) => {\n            let callback = (e: ReceiveFromWorker) => {\n                let t = f(e)\n                if (t != null && t !== false) {\n                    listeners = listeners.filter((l) => l !== callback)\n                    resolve(t)\n                }\n            }\n\n            listeners.push(callback)\n        })\n    }\n\n    await waitFor(e => {\n        return e.name === 'ready'\n    })\n\n    let responseId = 0;\n\n    return {\n        send: (data: SendToWorker) => {\n            worker.postMessage(JSON.stringify(data))\n        },\n        sendWithResponse: async<\n            S extends Omit<SendToWorkerWithResponse, \"id\">,\n        >(data: S): Promise<ReceiveFromWorkerResponse & Pick<S, \"name\">> => {\n            let id = responseId++\n            let sent = { ...data, id } as SendToWorkerWithResponse\n\n            worker.postMessage(JSON.stringify(sent))\n            return await waitFor((e: ReceiveFromWorker): ReceiveFromWorkerResponse & Pick<S, \"name\"> | undefined => {\n                if (responseMatchesRequest(sent, e)) {\n                    return e\n                }\n            })\n        },\n        wait: waitFor,\n        terminate: () => {\n            worker.terminate()\n        }\n    }\n\n}\n", "\nimport * as bindings from './wasm-bindings'\n\ndescribe('wasm-bindings.test.ts', function () {\n\n    beforeAll(async function () {\n        await bindings.loadWasmBindgen()\n    })\n\n    it('d', function () {\n        let uci = bindings.syncWasmUci()\n        uci.setPosition('startpos', [])\n        expect(uci.currentFen()).toBe('rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1')\n    })\n    it('e2e4', function () {\n        let uci = bindings.syncWasmUci()\n        let start = 'startpos'\n        let moves = ['e2e4']\n        uci.setPosition(start, moves)\n        expect(uci.currentFen()).toBe('rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 1 1')\n    })\n    it('possibleMoves`', function () {\n        let uci = bindings.syncWasmUci()\n        let start = 'startpos'\n        let moves = ['e2e4']\n        uci.setPosition(start, moves)\n\n        const expectedMoves = [\n            'a7a6',\n            'b7b6',\n            'c7c6',\n            'd7d6',\n            'e7e6',\n            'f7f6',\n            'g7g6',\n            'h7h6',\n            'a7a5',\n            'b7b5',\n            'c7c5',\n            'd7d5',\n            'e7e5',\n            'f7f5',\n            'g7g5',\n            'h7h5',\n            'b8a6',\n            'b8c6',\n            'g8f6',\n            'g8h6',\n        ]\n        expectedMoves.sort()\n\n        const actualMoves = uci.possibleMoves()\n        actualMoves.sort()\n\n        expect(expectedMoves).toEqual(actualMoves)\n    })\n\n    it('echoWorkerForTesting()', async function () {\n        const worker = bindings.jsWorkerForTesting()\n\n        expect(await worker.echo('hello'))\n            .toBe('message received by worker: hello')\n\n        expect(await worker.echo('bye'))\n            .toBe('message received by worker: bye')\n\n        worker.terminate()\n    })\n\n    it('wasmWorkerForTesting() counter', async function () {\n        const worker = await bindings.wasmWorkerForTesting()\n\n        worker.counter.go()\n        await new Promise(resolve => setTimeout(resolve, 400))\n        const result = await worker.counter.stop()\n    \n        expect(result).toBeGreaterThan(2)\n        worker.terminate()\n    })\n\n    it('wasmWorkerForTesting() perft very short', async function () {\n        const worker = await bindings.wasmWorkerForTesting()\n\n        worker.perft.start('startpos', 2)\n        await new Promise(resolve => setTimeout(resolve, 1000))\n        const result = await worker.perft.stop()\n    \n        expect(result).toBe(20)\n        worker.terminate()\n    })\n\n    it('wasmWorkerForTesting() perft short', async function () {\n        const worker = await bindings.wasmWorkerForTesting()\n\n        worker.perft.start('startpos', 5)\n        await new Promise(resolve => setTimeout(resolve, 1000))\n        const result = await worker.perft.stop()\n    \n        expect(result).toBe(197281)\n        worker.terminate()\n    })\n\n    it('wasmWorkerForTesting() perft', async function () {\n        const worker = await bindings.wasmWorkerForTesting()\n\n        worker.perft.start('startpos', 7)\n        await new Promise(resolve => setTimeout(resolve, 1000))\n        const result = await worker.perft.stop()\n    \n        expect(result).toBeGreaterThan(197281)\n        worker.terminate()\n    })\n\n    describe('wasmWorkerForTesting()', function () {\n        let uciWorker: Awaited<ReturnType<typeof bindings.searchWorker>>\n        beforeEach(async function () {\n            uciWorker = await bindings.searchWorker()\n        })\n\n        it('search via uci commands', async function () {\n            let result1 = uciWorker.search('startpos', ['e2e4'])\n            let result2 = uciWorker.search('startpos', ['e2e4'])\n            let result3 = uciWorker.search('startpos', ['e2e4'])\n            expect((await result1).length).toBe(4)\n            expect(await result2).toEqual(await result1)\n            expect(await result3).toEqual(await result1)\n        })\n    })\n})\n", "\nimport { boardFromFen, boardString } from \"./helpers\";\n\ndescribe('helpers.test.ts', function () {\n    it('boardFromFen: should return the starting position', function () {\n        let board = boardFromFen('startpos')\n        expect(boardString(board)).toEqual(\n            'rnbqkbnr\\n' +\n            'pppppppp\\n' +\n            '        \\n' +\n            '        \\n' +\n            '        \\n' +\n            '        \\n' +\n            'PPPPPPPP\\n' +\n            'RNBQKBNR'\n        );\n    })\n})\n", "\ndescribe('entry.test.ts', function () {\n    it('works', function () {\n        expect(1).toEqual(1)\n    })\n})\n\nimport './wasm-bindings.test'\nimport './helpers.test'\n\nconst env = jasmine.getEnv();\nenv.execute();\n\nnew EventSource('/esbuild').addEventListener('change', () => location.reload())\n"],
  "mappings": "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",
  "names": ["wasm_bindgen", "ptr", "module", "result", "listeners", "resolve", "result"]
}
